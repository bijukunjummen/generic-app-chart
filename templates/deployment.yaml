apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "app-chart.fullname" . }}
  labels:
    app: {{ include "app-chart.name" . }}
    chart: {{ include "app-chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "app-chart.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "app-chart.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.app.healthCheckPath }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.app.healthCheckPath }}
              port: http
          env:
          {{- range $key, $val := .Values.app.environment }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          {{- range $key, $val := .Values.app.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "app-chart.fullname" $ }}
                  key: {{ $key }}
          {{- end }}
          resources:
          {{- if .Values.resources.constraints.enabled }}
          limits:
{{ toYaml .Values.resources.limits | indent 12 }}
          requests:
{{ toYaml .Values.resources.requests | indent 12 }}
          {{- end }}